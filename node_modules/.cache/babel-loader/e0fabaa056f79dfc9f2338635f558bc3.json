{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\React\\\\mywebsite\\\\src\\\\components\\\\models\\\\portfolio\\\\RowImages.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Images from \"./Images\";\nimport ScrollButton from \"../../helpers/scroll/ScrollButton\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { RESPONSIVE } from \"../../../responsive/Responsive\";\nimport Scrolling from \"../../helpers/scroll/Scrolling\";\nimport HoverActions from \"./hover/HoverActions\";\nimport { useState } from \"react\";\nimport Paginate from \"../../helpers/scroll/Paginate\";\nimport TextHover from \"../../helpers/TextHover\";\nimport HoverText from \"./hover/HoverText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RowImages(props) {\n  _s();\n\n  const mobile = useMediaQuery(RESPONSIVE.MOBILE);\n  const responsive = mobile ? \"col alItCenter\" : \"row alItCenter\";\n  const mapText = [{\n    title: \"SOME TITLE \",\n    body: \"SOME BODY\"\n  }, {\n    title: \"SECOMD TITLE \",\n    body: \"SECOND BODY\"\n  }];\n  const componentList = [];\n\n  for (let i = 0; i < mapText.length; i++) {\n    componentList.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Images, {\n        flex: \"0.25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HoverActions, {\n        flex: \"0.5\",\n        child: /*#__PURE__*/_jsxDEV(Images, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 51\n        }, this),\n        title: mapText[i].title,\n        body: mapText[i].body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Images, {\n        flex: \"0.25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true));\n  }\n\n  const paginate = new Paginate(componentList.length, useState(0));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: responsive,\n      children: [componentList.filter((i, number) => number === paginate.currentPage), /*#__PURE__*/_jsxDEV(Scrolling, {\n        length: componentList.length,\n        paginate: paginate,\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(RowImages, \"/jGGz1vcA5Za2r6YeHU75CQGUcs=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = RowImages;\nexport default RowImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowImages\");","map":{"version":3,"sources":["C:/projects/React/mywebsite/src/components/models/portfolio/RowImages.js"],"names":["React","Images","ScrollButton","useMediaQuery","RESPONSIVE","Scrolling","HoverActions","useState","Paginate","TextHover","HoverText","RowImages","props","mobile","MOBILE","responsive","mapText","title","body","componentList","i","length","push","margin","paginate","filter","number","currentPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,UAAR,QAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,MAAM,GAAGV,aAAa,CACxBC,UAAU,CAACU,MADa,CAA5B;AAGA,QAAMC,UAAU,GAAGF,MAAM,GAAG,gBAAH,GAAsB,gBAA/C;AACA,QAAMG,OAAO,GAAE,CACX;AACIC,IAAAA,KAAK,EAAC,aADV;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADW,EAKX;AACID,IAAAA,KAAK,EAAC,eADV;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALW,CAAf;AAUA,QAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpCD,IAAAA,aAAa,CAACG,IAAd,eACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAApB;AAA2B,QAAA,KAAK,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAlC;AACc,QAAA,KAAK,EAAEN,OAAO,CAACI,CAAD,CAAP,CAAWH,KADhC;AACuC,QAAA,IAAI,EAAED,OAAO,CAACI,CAAD,CAAP,CAAWF;AADxD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,KAAK,EAAE;AACRK,UAAAA,MAAM,EAAE;AADA;AAAZ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,oBADJ;AAYH;;AAED,QAAMC,QAAQ,GAAG,IAAIhB,QAAJ,CAAaW,aAAa,CAACE,MAA3B,EAAmCd,QAAQ,CAAC,CAAD,CAA3C,CAAjB;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEQ,UAAhB;AAAA,iBACKI,aAAa,CAACM,MAAd,CAAqB,CAACL,CAAD,EAAIM,MAAJ,KAAeA,MAAM,KAAKF,QAAQ,CAACG,WAAxD,CADL,eAEI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAER,aAAa,CAACE,MAAjC;AAAyC,QAAA,QAAQ,EAAEG,QAAnD;AAA6D,QAAA,OAAO,EAAE,MAAM,CAC3E;AADD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH;;GAzCQb,S;UACUR,a;;;KADVQ,S;AA2CT,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Images from \"./Images\";\r\nimport ScrollButton from \"../../helpers/scroll/ScrollButton\";\r\nimport {useMediaQuery} from \"react-responsive\";\r\nimport {RESPONSIVE} from \"../../../responsive/Responsive\";\r\nimport Scrolling from \"../../helpers/scroll/Scrolling\";\r\nimport HoverActions from \"./hover/HoverActions\";\r\nimport {useState} from \"react\";\r\nimport Paginate from \"../../helpers/scroll/Paginate\";\r\nimport TextHover from \"../../helpers/TextHover\";\r\nimport HoverText from \"./hover/HoverText\";\r\n\r\nfunction RowImages(props) {\r\n    const mobile = useMediaQuery(\r\n        RESPONSIVE.MOBILE\r\n    )\r\n    const responsive = mobile ? \"col alItCenter\" : \"row alItCenter\";\r\n    const mapText =[\r\n        {\r\n            title:\"SOME TITLE \",\r\n            body: \"SOME BODY\"\r\n        },\r\n        {\r\n            title:\"SECOMD TITLE \",\r\n            body: \"SECOND BODY\"\r\n        },\r\n    ]\r\n    const componentList = [];\r\n    for (let i = 0; i < mapText.length; i++){\r\n        componentList.push(\r\n            <>\r\n                <Images flex=\"0.25\"/>\r\n                <HoverActions flex={\"0.5\"} child={<Images/>}\r\n                              title={mapText[i].title} body={mapText[i].body}\r\n                />\r\n                <Images flex=\"0.25\"/>\r\n                <div style={{\r\n                    margin: \"20px\"\r\n                }}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const paginate = new Paginate(componentList.length, useState(0));\r\n    return (\r\n        <>\r\n            <div className={responsive}>\r\n                {componentList.filter((i, number) => number === paginate.currentPage)}\r\n                <Scrolling length={componentList.length} paginate={paginate} onClick={() => {\r\n                }}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RowImages;"]},"metadata":{},"sourceType":"module"}