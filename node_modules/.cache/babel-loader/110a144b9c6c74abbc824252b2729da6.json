{"ast":null,"code":"import { StorePriceSite } from \"../store/StorePriceSite\";\nimport { StorePriceSMM } from \"../store/StorePriceSMM\";\nimport { StorePriceApp } from \"../store/StorePriceApp\";\nimport { StorePriceDesign } from \"../store/StorePriceDesign\";\nimport Paginate from \"../../../helpers/scroll/Paginate\";\nexport class HandleChoices {\n  constructor(statePaginate, stateOverallPrice) {\n    this.paginate = new Paginate(4, statePaginate);\n    this.prices = [StorePriceSite, StorePriceSMM, StorePriceApp, StorePriceDesign];\n    this.overallPrice = stateOverallPrice[0];\n    this.setOverallPrice = stateOverallPrice[1];\n    this.chosenPrices = [];\n  }\n\n  addToChosenPrices(element) {\n    this.chosenPrices.push(element);\n  }\n\n  removeToChosenPrices(element) {\n    this.chosenPrices = this.chosenPrices.filter(el => el.id !== element.id);\n  }\n\n  addPrice(price) {\n    const nowPrice = this.overallPrice + price;\n    this.setOverallPrice(nowPrice);\n  }\n\n  removePrice(price) {\n    const nowPrice = this.overallPrice - price;\n    this.setOverallPrice(nowPrice);\n  }\n\n  providePricesList() {\n    return this.getPrice(this.paginate.currentPage);\n  }\n\n  getPrice(index) {\n    return this.prices[index];\n  }\n\n  activationAndDeactivationOfCheck(isChosen, checkBox) {\n    if (isChosen) {\n      checkBox.backgroundColor = \"#5454D4\";\n      checkBox.borderColor = \"white\";\n    } else {\n      checkBox.borderColor = \"#979797\";\n    }\n  }\n\n  decideAddOrRemove(id, isChoice) {\n    if (isChoice) {} else {}\n\n    const priceList = this.getPrice(parseInt(id / 100));\n    const chosenElement = priceList.filter(element => element.id === id);\n  }\n\n}","map":{"version":3,"sources":["C:/projects/React/mywebsite/src/components/models/prices/choices/HandleChoices.js"],"names":["StorePriceSite","StorePriceSMM","StorePriceApp","StorePriceDesign","Paginate","HandleChoices","constructor","statePaginate","stateOverallPrice","paginate","prices","overallPrice","setOverallPrice","chosenPrices","addToChosenPrices","element","push","removeToChosenPrices","filter","el","id","addPrice","price","nowPrice","removePrice","providePricesList","getPrice","currentPage","index","activationAndDeactivationOfCheck","isChosen","checkBox","backgroundColor","borderColor","decideAddOrRemove","isChoice","priceList","parseInt","chosenElement"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,yBAA7B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,CAACC,aAAD,EAAgBC,iBAAhB,EAAmC;AAC1C,SAAKC,QAAL,GAAgB,IAAIL,QAAJ,CAAa,CAAb,EAAgBG,aAAhB,CAAhB;AACA,SAAKG,MAAL,GAAc,CACVV,cADU,EAEVC,aAFU,EAGVC,aAHU,EAIVC,gBAJU,CAAd;AAMA,SAAKQ,YAAL,GAAoBH,iBAAiB,CAAC,CAAD,CAArC;AACA,SAAKI,eAAL,GAAuBJ,iBAAiB,CAAC,CAAD,CAAxC;AACA,SAAKK,YAAL,GAAoB,EAApB;AACH;;AAEDC,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AACvB,SAAKF,YAAL,CAAkBG,IAAlB,CAAuBD,OAAvB;AACH;;AAEDE,EAAAA,oBAAoB,CAACF,OAAD,EAAU;AAC1B,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,MAAlB,CAA0BC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUL,OAAO,CAACK,EAAnD,CAApB;AACH;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,UAAMC,QAAQ,GAAG,KAAKZ,YAAL,GAAoBW,KAArC;AACA,SAAKV,eAAL,CAAqBW,QAArB;AACH;;AAEDC,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACf,UAAMC,QAAQ,GAAG,KAAKZ,YAAL,GAAoBW,KAArC;AACA,SAAKV,eAAL,CAAqBW,QAArB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKC,QAAL,CAAc,KAAKjB,QAAL,CAAckB,WAA5B,CAAP;AACH;;AAGDD,EAAAA,QAAQ,CAACE,KAAD,EAAQ;AACZ,WAAO,KAAKlB,MAAL,CAAYkB,KAAZ,CAAP;AACH;;AAEDC,EAAAA,gCAAgC,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACjD,QAAID,QAAJ,EAAc;AACVC,MAAAA,QAAQ,CAACC,eAAT,GAA2B,SAA3B;AACAD,MAAAA,QAAQ,CAACE,WAAT,GAAuB,OAAvB;AACH,KAHD,MAGO;AACHF,MAAAA,QAAQ,CAACE,WAAT,GAAuB,SAAvB;AACH;AACJ;;AAEDC,EAAAA,iBAAiB,CAACd,EAAD,EAAKe,QAAL,EAAe;AAC5B,QAAIA,QAAJ,EAAc,CAEb,CAFD,MAEO,CAEN;;AACD,UAAMC,SAAS,GAAG,KAAKV,QAAL,CAAcW,QAAQ,CAACjB,EAAE,GAAG,GAAN,CAAtB,CAAlB;AACA,UAAMkB,aAAa,GAAGF,SAAS,CAAClB,MAAV,CAAiBH,OAAO,IAAIA,OAAO,CAACK,EAAR,KAAeA,EAA3C,CAAtB;AAEH;;AA3DsB","sourcesContent":["import {StorePriceSite} from \"../store/StorePriceSite\";\r\nimport {StorePriceSMM} from \"../store/StorePriceSMM\";\r\nimport {StorePriceApp} from \"../store/StorePriceApp\";\r\nimport {StorePriceDesign} from \"../store/StorePriceDesign\";\r\nimport Paginate from \"../../../helpers/scroll/Paginate\";\r\n\r\nexport class HandleChoices {\r\n    constructor(statePaginate, stateOverallPrice) {\r\n        this.paginate = new Paginate(4, statePaginate);\r\n        this.prices = [\r\n            StorePriceSite,\r\n            StorePriceSMM,\r\n            StorePriceApp,\r\n            StorePriceDesign\r\n        ]\r\n        this.overallPrice = stateOverallPrice[0];\r\n        this.setOverallPrice = stateOverallPrice[1];\r\n        this.chosenPrices = [];\r\n    }\r\n\r\n    addToChosenPrices(element) {\r\n        this.chosenPrices.push(element);\r\n    }\r\n\r\n    removeToChosenPrices(element) {\r\n        this.chosenPrices = this.chosenPrices.filter((el) => el.id !== element.id);\r\n    }\r\n\r\n    addPrice(price) {\r\n        const nowPrice = this.overallPrice + price;\r\n        this.setOverallPrice(nowPrice);\r\n    }\r\n\r\n    removePrice(price) {\r\n        const nowPrice = this.overallPrice - price;\r\n        this.setOverallPrice(nowPrice);\r\n    }\r\n\r\n    providePricesList() {\r\n        return this.getPrice(this.paginate.currentPage);\r\n    }\r\n\r\n\r\n    getPrice(index) {\r\n        return this.prices[index]\r\n    }\r\n\r\n    activationAndDeactivationOfCheck(isChosen, checkBox) {\r\n        if (isChosen) {\r\n            checkBox.backgroundColor = \"#5454D4\";\r\n            checkBox.borderColor = \"white\";\r\n        } else {\r\n            checkBox.borderColor = \"#979797\";\r\n        }\r\n    }\r\n\r\n    decideAddOrRemove(id, isChoice) {\r\n        if (isChoice) {\r\n\r\n        } else {\r\n\r\n        }\r\n        const priceList = this.getPrice(parseInt(id / 100));\r\n        const chosenElement = priceList.filter(element => element.id === id);\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}