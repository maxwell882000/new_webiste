{"ast":null,"code":"import { StorePriceSite } from \"../store/StorePriceSite\";\nimport { StorePriceSMM } from \"../store/StorePriceSMM\";\nimport { StorePriceApp } from \"../store/StorePriceApp\";\nimport { StorePriceDesign } from \"../store/StorePriceDesign\";\nimport Paginate from \"../../../helpers/scroll/Paginate\";\nexport class HandleChoices {\n  constructor(statePaginate, stateOverallPrice, stateChosenPrices) {\n    this.paginate = new Paginate(4, statePaginate);\n    this.prices = [StorePriceSite, StorePriceSMM, StorePriceApp, StorePriceDesign];\n    this.overallPrice = stateOverallPrice[0];\n    this.setOverallPrice = stateOverallPrice[1];\n    this.chosenPrices = stateChosenPrices[0];\n    this.setChosenPrices = stateChosenPrices[1];\n  }\n\n  getPrice(index) {\n    return this.prices[index];\n  }\n\n  addToChosenPrices(element) {\n    this.setChosenPrices(old => [...old, element]);\n  }\n\n  removeToChosenPrices(element) {\n    const chosenPrices = this.chosenPrices.filter(el => el.id !== element.id);\n    this.setChosenPrices(chosenPrices);\n  }\n\n  addPrice(price) {\n    const nowPrice = this.overallPrice + price;\n    this.setOverallPrice(nowPrice);\n    console.log(this.chosenPrices);\n  }\n\n  removePrice(price) {\n    const nowPrice = this.overallPrice - price;\n    this.setOverallPrice(nowPrice);\n    console.log(this.chosenPrices);\n  }\n\n  initiateChoice(id) {\n    return this.chosenPrices.some(e => e.id === id);\n  }\n\n  providePricesList() {\n    return this.getPrice(this.paginate.currentPage);\n  }\n\n  providePriceListLength() {\n    return this.getPrice(this.paginate.currentPage).length;\n  }\n\n  removeChoice(element) {\n    this.removePrice(element.price);\n    this.removeToChosenPrices(element);\n  }\n\n  addChoice(element) {\n    this.addPrice(element.price);\n    this.addToChosenPrices(element);\n  }\n\n  findChoice(id) {\n    const priceList = this.getPrice(parseInt(id / 100));\n    return priceList.filter(element => element.id === id)[0];\n  }\n\n  activationAndDeactivationOfCheck(isChosen, checkBox) {\n    if (isChosen) {\n      checkBox.backgroundColor = \"#5454D4\";\n      checkBox.borderColor = \"white\";\n    } else {\n      checkBox.borderColor = \"#979797\";\n    }\n  }\n\n  decideAddOrRemove(id, isChoice) {\n    const element = this.findChoice(id);\n\n    if (isChoice) {\n      console.log(element.price);\n      this.addChoice(element);\n    } else {\n      this.removeChoice(element);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/projects/React/mywebsite/src/components/models/prices/choices/HandleChoices.js"],"names":["StorePriceSite","StorePriceSMM","StorePriceApp","StorePriceDesign","Paginate","HandleChoices","constructor","statePaginate","stateOverallPrice","stateChosenPrices","paginate","prices","overallPrice","setOverallPrice","chosenPrices","setChosenPrices","getPrice","index","addToChosenPrices","element","old","removeToChosenPrices","filter","el","id","addPrice","price","nowPrice","console","log","removePrice","initiateChoice","some","e","providePricesList","currentPage","providePriceListLength","length","removeChoice","addChoice","findChoice","priceList","parseInt","activationAndDeactivationOfCheck","isChosen","checkBox","backgroundColor","borderColor","decideAddOrRemove","isChoice"],"mappings":"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","sourcesContent":["import {StorePriceSite} from \"../store/StorePriceSite\";\r\nimport {StorePriceSMM} from \"../store/StorePriceSMM\";\r\nimport {StorePriceApp} from \"../store/StorePriceApp\";\r\nimport {StorePriceDesign} from \"../store/StorePriceDesign\";\r\nimport Paginate from \"../../../helpers/scroll/Paginate\";\r\n\r\nexport class HandleChoices {\r\n    constructor(statePaginate, stateOverallPrice, stateChosenPrices) {\r\n        this.paginate = new Paginate(4, statePaginate);\r\n        this.prices = [\r\n            StorePriceSite,\r\n            StorePriceSMM,\r\n            StorePriceApp,\r\n            StorePriceDesign\r\n        ]\r\n        this.overallPrice = stateOverallPrice[0];\r\n        this.setOverallPrice = stateOverallPrice[1];\r\n        this.chosenPrices = stateChosenPrices[0];\r\n        this.setChosenPrices = stateChosenPrices[1];\r\n    }\r\n\r\n    getPrice(index) {\r\n        return this.prices[index]\r\n    }\r\n\r\n    addToChosenPrices(element) {\r\n        this.setChosenPrices(old => [...old, element]);\r\n    }\r\n\r\n    removeToChosenPrices(element) {\r\n        const chosenPrices = this.chosenPrices.filter((el) => el.id !== element.id);\r\n        this.setChosenPrices(chosenPrices);\r\n    }\r\n\r\n    addPrice(price) {\r\n        const nowPrice = this.overallPrice + price;\r\n        this.setOverallPrice(nowPrice);\r\n        console.log(this.chosenPrices);\r\n    }\r\n\r\n    removePrice(price) {\r\n        const nowPrice = this.overallPrice - price;\r\n        this.setOverallPrice(nowPrice);\r\n        console.log(this.chosenPrices);\r\n    }\r\n\r\n    initiateChoice(id) {\r\n        return this.chosenPrices.some(e => e.id === id);\r\n    }\r\n\r\n    providePricesList() {\r\n        return this.getPrice(this.paginate.currentPage);\r\n    }\r\n\r\n    providePriceListLength() {\r\n        return this.getPrice(this.paginate.currentPage).length;\r\n    }\r\n\r\n    removeChoice(element) {\r\n        this.removePrice(element.price);\r\n        this.removeToChosenPrices(element);\r\n    }\r\n\r\n    addChoice(element) {\r\n        this.addPrice(element.price);\r\n        this.addToChosenPrices(element);\r\n    }\r\n\r\n    findChoice(id) {\r\n        const priceList = this.getPrice(parseInt(id / 100));\r\n        return priceList.filter(element => element.id === id)[0];\r\n    }\r\n\r\n    activationAndDeactivationOfCheck(isChosen, checkBox) {\r\n        if (isChosen) {\r\n            checkBox.backgroundColor = \"#5454D4\";\r\n            checkBox.borderColor = \"white\";\r\n        } else {\r\n            checkBox.borderColor = \"#979797\";\r\n        }\r\n    }\r\n\r\n    decideAddOrRemove(id, isChoice) {\r\n        const element = this.findChoice(id);\r\n        if (isChoice) {\r\n            console.log(element.price);\r\n            this.addChoice(element)\r\n        } else {\r\n            this.removeChoice(element)\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}