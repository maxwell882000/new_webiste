{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\React\\\\mywebsite\\\\src\\\\components\\\\helpers\\\\Text.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { css, StyleSheet } from 'aphrodite';\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Text = ({\n  fontWeight = 600,\n  text,\n  color,\n  size,\n  center,\n  hover = {\n    cursor: \"default\"\n  }\n}) => {\n  _s();\n\n  const isLaptop = useMediaQuery({\n    query: \"(max-device-width: 1024px)\"\n  });\n  const isTabletDevice = useMediaQuery({\n    query: \"(max-device-width: 768px)\"\n  });\n\n  function convertToFontSize(size) {\n    return size.toString() + \"rem\";\n  }\n\n  function applyFont(size, percent) {\n    const float = parseFloat(size);\n    const responsive = float - float / 100 * percent;\n    return convertToFontSize(responsive);\n  }\n\n  function chooseFont(size) {\n    if (isLaptop) {\n      console.log(\"LAPTOP\");\n      return applyFont(size, 20);\n    } else if (isTabletDevice) {\n      console.log(\"TABLET\");\n      return applyFont(size, 40);\n    }\n\n    return size;\n  }\n\n  size = chooseFont(size);\n  console.log(`true size : ${size}`);\n  const style = StyleSheet.create({\n    spanText: {\n      fontFamily: \"Gilroy\",\n      fontWeight: fontWeight,\n      color: color,\n      textAlign: center,\n      fontSize: size\n    },\n    addHover: {\n      \":hover\": hover\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: css(style.spanText, style.addHover),\n    onClick: () => console.log(\"Asdsad\"),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Text, \"djMoX06SMJAnMog+7V+30+XaBwQ=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["C:/projects/React/mywebsite/src/components/helpers/Text.js"],"names":["React","css","StyleSheet","useMediaQuery","Text","fontWeight","text","color","size","center","hover","cursor","isLaptop","query","isTabletDevice","convertToFontSize","toString","applyFont","percent","float","parseFloat","responsive","chooseFont","console","log","style","create","spanText","fontFamily","textAlign","fontSize","addHover"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,UAAb,QAA8B,WAA9B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACIC,EAAAA,UAAU,GAAG,GADjB;AAEIC,EAAAA,IAFJ;AAGIC,EAAAA,KAHJ;AAIIC,EAAAA,IAJJ;AAKIC,EAAAA,MALJ;AAMIC,EAAAA,KAAK,GAAG;AACJC,IAAAA,MAAM,EAAE;AADJ;AANZ,CAAD,KASO;AAAA;;AAChB,QAAMC,QAAQ,GAAGT,aAAa,CAAC;AAC3BU,IAAAA,KAAK,EAAE;AADoB,GAAD,CAA9B;AAIA,QAAMC,cAAc,GAAGX,aAAa,CAAC;AACjCU,IAAAA,KAAK,EAAE;AAD0B,GAAD,CAApC;;AAIA,WAASE,iBAAT,CAA2BP,IAA3B,EAAiC;AAC7B,WAAOA,IAAI,CAACQ,QAAL,KAAkB,KAAzB;AACH;;AAED,WAASC,SAAT,CAAmBT,IAAnB,EAAyBU,OAAzB,EAAkC;AAC9B,UAAMC,KAAK,GAAGC,UAAU,CAACZ,IAAD,CAAxB;AACA,UAAMa,UAAU,GAAGF,KAAK,GAAGA,KAAK,GAAG,GAAR,GAAcD,OAAzC;AACA,WAAOH,iBAAiB,CAACM,UAAD,CAAxB;AACH;;AAED,WAASC,UAAT,CAAoBd,IAApB,EAA0B;AACtB,QAAII,QAAJ,EAAc;AACVW,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOP,SAAS,CAACT,IAAD,EAAO,EAAP,CAAhB;AACH,KAHD,MAGO,IAAIM,cAAJ,EAAoB;AACvBS,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOP,SAAS,CAACT,IAAD,EAAO,EAAP,CAAhB;AACH;;AACD,WAAOA,IAAP;AACH;;AACDA,EAAAA,IAAI,GAAGc,UAAU,CAACd,IAAD,CAAjB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAchB,IAAK,EAAhC;AACA,QAAMiB,KAAK,GAAGvB,UAAU,CAACwB,MAAX,CAAkB;AACxBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAE,QADN;AAENvB,MAAAA,UAAU,EAAEA,UAFN;AAGNE,MAAAA,KAAK,EAAEA,KAHD;AAINsB,MAAAA,SAAS,EAAEpB,MAJL;AAKNqB,MAAAA,QAAQ,EAAEtB;AALJ,KADc;AAQxBuB,IAAAA,QAAQ,EAAE;AACN,gBAAUrB;AADJ;AARc,GAAlB,CAAd;AAcA,sBACI;AAAM,IAAA,SAAS,EAAET,GAAG,CAACwB,KAAK,CAACE,QAAP,EAAiBF,KAAK,CAACM,QAAvB,CAApB;AAAsD,IAAA,OAAO,EAAE,MAAMR,OAAO,CAACC,GAAR,CAAY,QAAZ,CAArE;AAAA,cACKlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3DD;;GAAMF,I;UAUeD,a,EAIMA,a;;;KAdrBC,I;AA6DN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {css, StyleSheet} from 'aphrodite';\r\nimport {useMediaQuery} from \"react-responsive\";\r\n\r\nconst Text = ({\r\n                  fontWeight = 600,\r\n                  text,\r\n                  color,\r\n                  size,\r\n                  center,\r\n                  hover = {\r\n                      cursor: \"default\"\r\n                  }\r\n              }) => {\r\n    const isLaptop = useMediaQuery({\r\n        query: \"(max-device-width: 1024px)\",\r\n    });\r\n\r\n    const isTabletDevice = useMediaQuery({\r\n        query: \"(max-device-width: 768px)\",\r\n    });\r\n\r\n    function convertToFontSize(size) {\r\n        return size.toString() + \"rem\";\r\n    }\r\n\r\n    function applyFont(size, percent) {\r\n        const float = parseFloat(size);\r\n        const responsive = float - float / 100 * percent;\r\n        return convertToFontSize(responsive);\r\n    }\r\n\r\n    function chooseFont(size) {\r\n        if (isLaptop) {\r\n            console.log(\"LAPTOP\");\r\n            return applyFont(size, 20)\r\n        } else if (isTabletDevice) {\r\n            console.log(\"TABLET\");\r\n            return applyFont(size, 40)\r\n        }\r\n        return size;\r\n    }\r\n    size = chooseFont(size);\r\n    console.log(`true size : ${size}`);\r\n    const style = StyleSheet.create({\r\n            spanText: {\r\n                fontFamily: \"Gilroy\",\r\n                fontWeight: fontWeight,\r\n                color: color,\r\n                textAlign: center,\r\n                fontSize: size,\r\n            },\r\n            addHover: {\r\n                \":hover\": hover\r\n            }\r\n        }\r\n    );\r\n\r\n    return (\r\n        <span className={css(style.spanText, style.addHover)} onClick={() => console.log(\"Asdsad\")}>\r\n            {text}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}