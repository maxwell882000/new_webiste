{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\React\\\\mywebsite\\\\src\\\\components\\\\helpers\\\\Text.js\";\nimport React from 'react';\nimport { css, StyleSheet } from 'aphrodite';\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Text = ({\n  fontWeight = 600,\n  text,\n  color,\n  size,\n  center,\n  hover = {\n    cursor: \"default\"\n  }\n}) => {\n  // const isLaptopMax = useMediaQuery({\n  //     maxWidth:\"1024px\",\n  //     minWidth:\"897px\",\n  // });\n  // const isLaptopMin = useMediaQuery({\n  //     maxWidth:\"896px\",\n  //     minWidth:\"769px\",\n  // });\n  // const isTabletDevice = useMediaQuery({\n  //     query: \"(max-device-width: 768px)\",\n  // });\n  //\n  // function convertToFontSize(size) {\n  //     return size.toString() + \"rem\";\n  // }\n  //\n  // function applyFont(size, percent) {\n  //     const float = parseFloat(size);\n  //     const responsive = float - float / 100 * percent;\n  //     return convertToFontSize(responsive);\n  // }\n  //\n  // function chooseFont(size) {\n  //     if (isLaptopMax) {\n  //         console.log(\"LAPTOP\");\n  //         return applyFont(size, 20)\n  //     } else if (isLaptopMin) {\n  //         console.log(\"LAPTOP MIN\");\n  //         return applyFont(size, 30)\n  //     } else if (isTabletDevice) {\n  //         console.log(\"TABLET\");\n  //         return applyFont(size, 40)\n  //     }\n  //     console.log(\"NONE\");\n  //     return size;\n  // }\n  //\n  // size = chooseFont(size);\n  // console.log(`true size : ${size}`);\n  const style = StyleSheet.create({\n    spanText: {\n      fontFamily: \"Gilroy\",\n      fontWeight: fontWeight,\n      color: color,\n      textAlign: center,\n      fontSize: size\n    },\n    addHover: {\n      \":hover\": hover\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: css(style.spanText, style.addHover),\n    onClick: () => console.log(\"Asdsad\"),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["C:/projects/React/mywebsite/src/components/helpers/Text.js"],"names":["React","css","StyleSheet","useMediaQuery","Text","fontWeight","text","color","size","center","hover","cursor","style","create","spanText","fontFamily","textAlign","fontSize","addHover","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,UAAb,QAA8B,WAA9B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACIC,EAAAA,UAAU,GAAG,GADjB;AAEIC,EAAAA,IAFJ;AAGIC,EAAAA,KAHJ;AAIIC,EAAAA,IAJJ;AAKIC,EAAAA,MALJ;AAMIC,EAAAA,KAAK,GAAG;AACJC,IAAAA,MAAM,EAAE;AADJ;AANZ,CAAD,KASO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,KAAK,GAAGV,UAAU,CAACW,MAAX,CAAkB;AACxBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAE,QADN;AAENV,MAAAA,UAAU,EAAEA,UAFN;AAGNE,MAAAA,KAAK,EAAEA,KAHD;AAINS,MAAAA,SAAS,EAAEP,MAJL;AAKNQ,MAAAA,QAAQ,EAAET;AALJ,KADc;AAQxBU,IAAAA,QAAQ,EAAE;AACN,gBAAUR;AADJ;AARc,GAAlB,CAAd;AAcA,sBACI;AAAM,IAAA,SAAS,EAAET,GAAG,CAACW,KAAK,CAACE,QAAP,EAAiBF,KAAK,CAACM,QAAvB,CAApB;AAAsD,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAArE;AAAA,cACKd;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApED;;KAAMF,I;AAsEN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {css, StyleSheet} from 'aphrodite';\r\nimport {useMediaQuery} from \"react-responsive\";\r\n\r\nconst Text = ({\r\n                  fontWeight = 600,\r\n                  text,\r\n                  color,\r\n                  size,\r\n                  center,\r\n                  hover = {\r\n                      cursor: \"default\"\r\n                  }\r\n              }) => {\r\n    // const isLaptopMax = useMediaQuery({\r\n    //     maxWidth:\"1024px\",\r\n    //     minWidth:\"897px\",\r\n    // });\r\n    // const isLaptopMin = useMediaQuery({\r\n    //     maxWidth:\"896px\",\r\n    //     minWidth:\"769px\",\r\n    // });\r\n    // const isTabletDevice = useMediaQuery({\r\n    //     query: \"(max-device-width: 768px)\",\r\n    // });\r\n    //\r\n    // function convertToFontSize(size) {\r\n    //     return size.toString() + \"rem\";\r\n    // }\r\n    //\r\n    // function applyFont(size, percent) {\r\n    //     const float = parseFloat(size);\r\n    //     const responsive = float - float / 100 * percent;\r\n    //     return convertToFontSize(responsive);\r\n    // }\r\n    //\r\n    // function chooseFont(size) {\r\n    //     if (isLaptopMax) {\r\n    //         console.log(\"LAPTOP\");\r\n    //         return applyFont(size, 20)\r\n    //     } else if (isLaptopMin) {\r\n    //         console.log(\"LAPTOP MIN\");\r\n    //         return applyFont(size, 30)\r\n    //     } else if (isTabletDevice) {\r\n    //         console.log(\"TABLET\");\r\n    //         return applyFont(size, 40)\r\n    //     }\r\n    //     console.log(\"NONE\");\r\n    //     return size;\r\n    // }\r\n    //\r\n    // size = chooseFont(size);\r\n    // console.log(`true size : ${size}`);\r\n    const style = StyleSheet.create({\r\n            spanText: {\r\n                fontFamily: \"Gilroy\",\r\n                fontWeight: fontWeight,\r\n                color: color,\r\n                textAlign: center,\r\n                fontSize: size,\r\n            },\r\n            addHover: {\r\n                \":hover\": hover\r\n            }\r\n        }\r\n    );\r\n\r\n    return (\r\n        <span className={css(style.spanText, style.addHover)} onClick={() => console.log(\"Asdsad\")}>\r\n            {text}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}